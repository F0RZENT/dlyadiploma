2.1 Создание логической базы данных
Логическая модель базы данных — это абстрактное представление структуры данных, которое используется для планирования и проектирования баз данных. Она описывает, как данные будут организованы и как они будут взаимодействовать друг с другом, не привязываясь к конкретной системе управления базами данных (СУБД).

Логическая модель помогает разработчикам и аналитикам понять требования к данным и спроектировать эффективную и масштабируемую базу данных. Она является важным этапом в процессе разработки базы данных, так как позволяет структурировать данные и определить их взаимосвязи.

Также логическая модель служит основой для создания физической модели базы данных, которая уже учитывает конкретные особенности выбранной СУБД.

Структура логической базы данных использует иерархическую структуру таблиц, то есть данные организованы в виде древовидной структуры и хранятся в виде записей, которые соединены друг с другом рёбрами


Таблица 1 "Пользователи"
Таблица 2 "Пользователи"
Таблица 3 "Пользователи"
Таблица 4 "Пользователи"
Таблица 5 "Пользователи"


тут должны быть таблицы в ворде с описанием данных в таблицах.


2.2 Создание физической базы данных
Физическая схема базы данных — это фактическая структура физического хранилища базы данных на диске. Она включает в себя механизмы хранения, файловые структуры, индексы и другие детали низкого уровня, которые определяют, как данные хранятся и получают к ним доступ со стороны базовой системы управления базами данных (СУБД).

Физическая схема представляет собой диаграмму, содержащую всю необходимую информацию для генерации базы данных для конкретной СУБД или даже конкретной версии СУБД. В ней должно быть полное описание базы данных в соответствии с принятым в ней синтаксисом, с указанием типов атрибутов, триггеров, хранимых процедур и т.д.

Этот тип схемы в основном связан с эффективным использованием пространства хранения, повышением производительности базы данных за счёт оптимизации операций поиска и хранения данных.




